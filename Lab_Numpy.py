#  Numpy Lab

'''Singapore and they enjoyed various fun events.
The first event was ‘Roller Coaster’ for which the ticket price was 44 dollars for male, 38 dollars for females and 21 dollars for kids. They spent a total of 1412 dollars for this event. Second event was ‘4D Max Cinema’ for which ticket prices were 32 dollars, 28 dollars and 15 dollars respectively. They spent 1024 dollars for this event.
Finally they had a ‘cable car’ trip for which the ticket prices were 24 dollars, 20 dollars and 10 dollars respectively. They spent 728 dollars for the cable car trip.'''

import numpy as np

# Roller Coaster

# 44 * male + 38 * female + 21 * child  = 1412
 
# Cinema

#  32* male + 28 * female + 15 * child = 1024

#  Cable car 

#  24 * male + 20 * female + 10 * child = 728

#  We are using numpy's linalg solve 

# A = np.array([[44,38,21],[32,28,15],[24,20,10]])

# B = np.array([1412,1024,728])

# X = np.linalg.solve(A,B)
# print(X)

# print("No. of Males are", X[0].round(1) )
# print("No. of females are", X[1].round(1) )
# print("No. of children are", X[2].round(1) )



#  Question  2 

''''Construct two numpy 3D arrays A1 and A2 of any shape set by the user at run time and the elements are randomly generated by the system. Perform the following steps
'''
''' Construct an array by selecting all the elements of the first array (A1) that are divisible by 5
'''
'''Construct another array by selecting all the elements of the second array (A2) that are divisible by 4
'''
''' Join 1 and 2 to form a single dimensional array and construct the largest possible square matrix from it
'''

import numpy as np

def create_random_array(shape):
    
    return np.random.randint(1, 101, shape)

def select_divisible_elements(array, divisor):
    
    return array[array % divisor == 0]

def largest_square_matrix(arr):
    "
    size = int(np.floor(np.sqrt(len(arr))))
    return arr[:size * size].reshape(size, size)


shape1 = tuple(map(int, input("Enter the shape of the first array (e.g., 3 4 5): ").split()))
shape2 = tuple(map(int, input("Enter the shape of the second array (e.g., 2 3 6): ").split()))


A1 = create_random_array(shape1)
A2 = create_random_array(shape2)


divisible_by_5 = select_divisible_elements(A1, 5)
divisible_by_4 = select_divisible_elements(A2, 4)


combined_array = np.concatenate((divisible_by_5, divisible_by_4))


square_matrix = largest_square_matrix(combined_array)


print("\nFirst Array (A1):\n", A1)
print("\nSecond Array (A2):\n", A2)
print("\nElements of A1 divisible by 5:\n", divisible_by_5)
print("\nElements of A2 divisible by 4:\n", divisible_by_4)
print("\nCombined Array:\n", combined_array)
print("\nLargest Square Matrix:\n", square_matrix)

